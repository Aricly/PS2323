// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScrapeList.Data;

#nullable disable

namespace ScrapeList.Migrations
{
    [DbContext(typeof(ScrapeListContext))]
    [Migration("20231004050701_UpdatedxPathPrice")]
    partial class UpdatedxPathPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ScrapeList.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ScrapeList.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaterialID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ScrapeList.Models.PriceRecord", b =>
                {
                    b.Property<int>("PriceRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaterialID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("PriceRecordID");

                    b.HasIndex("MaterialID");

                    b.ToTable("PriceRecords");
                });

            modelBuilder.Entity("ScrapeList.Models.Projection", b =>
                {
                    b.Property<int>("ProjectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProjectedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProjectedPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectionID");

                    b.HasIndex("MaterialID");

                    b.ToTable("Projections");
                });

            modelBuilder.Entity("ScrapeList.Models.SourceWebsite", b =>
                {
                    b.Property<int>("WebsiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("xPathPrice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WebsiteID");

                    b.ToTable("SourceWebsites");
                });

            modelBuilder.Entity("ScrapeList.Models.SourceWebsitePriceRecord", b =>
                {
                    b.Property<int>("WebsiteID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("PriceRecordID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("WebsiteID", "PriceRecordID");

                    b.HasIndex("PriceRecordID");

                    b.ToTable("SourceWebsitePriceRecords");
                });

            modelBuilder.Entity("ScrapeList.Models.Material", b =>
                {
                    b.HasOne("ScrapeList.Models.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ScrapeList.Models.PriceRecord", b =>
                {
                    b.HasOne("ScrapeList.Models.Material", "Material")
                        .WithMany("PriceRecords")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("ScrapeList.Models.Projection", b =>
                {
                    b.HasOne("ScrapeList.Models.Material", "Material")
                        .WithMany("Projections")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("ScrapeList.Models.SourceWebsitePriceRecord", b =>
                {
                    b.HasOne("ScrapeList.Models.PriceRecord", "PriceRecord")
                        .WithMany("SourceWebsitePriceRecords")
                        .HasForeignKey("PriceRecordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScrapeList.Models.SourceWebsite", "SourceWebsite")
                        .WithMany("SourceWebsitePriceRecords")
                        .HasForeignKey("WebsiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceRecord");

                    b.Navigation("SourceWebsite");
                });

            modelBuilder.Entity("ScrapeList.Models.Category", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("ScrapeList.Models.Material", b =>
                {
                    b.Navigation("PriceRecords");

                    b.Navigation("Projections");
                });

            modelBuilder.Entity("ScrapeList.Models.PriceRecord", b =>
                {
                    b.Navigation("SourceWebsitePriceRecords");
                });

            modelBuilder.Entity("ScrapeList.Models.SourceWebsite", b =>
                {
                    b.Navigation("SourceWebsitePriceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
